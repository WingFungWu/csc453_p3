Members:
Tai Le, Wing Fung Wu

To run memSim:
./memSim <reference-sequence-file.txt> -f <FRAMES> -p <PRA>
or
./memSim <reference-sequence-file.txt> -p <PRA> -f <FRAMES>

OPT tie breaking decision:
e.g., if there are two pages with future access index 'inf,' we choose one of them by random.

Extra credit: 
1. We implemented the Random algorithm to randomly pick the frame to swap and the result is worse than FIFO in some case
and some will have the same behavior as FIFO
FIFO
python3 memSim.py addrs.txt -p FIFO -f 16 | tail -6 
Number of Translated Addresses = 38400
Page Faults = 38368
Page Fault Rate = 0.999
TLB Hits = 21
TLB Misses = 38379
TLB Hit Rate = 0.001

2. We visualize the virtual memory by putting the access time and the page number of each virtual address into a csv file, where the access time is the number of seconds passed since epoch.

To contruct it, we use time.time function to record the access time, and we store them along with the page number.

It is helpful for analyzing when each page is been accessed.

To run visualization:
./memSim <reference-sequence-file.txt> -f <FRAMES> -p <PRA> -v 0

RD
python3 memSim.py addrs.txt -p RD -f 16 | tail -6 
Number of Translated Addresses = 38400
Page Faults = 38369
Page Fault Rate = 0.999
TLB Hits = 19
TLB Misses = 38381
TLB Hit Rate = 0.000